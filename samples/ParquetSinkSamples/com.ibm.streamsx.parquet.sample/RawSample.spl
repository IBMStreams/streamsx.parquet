namespace com.ibm.streamsx.parquet.sample;

use com.ibm.streamsx.parquet::ParquetSink ;

composite RawSample {

	param
		expression<rstring> $hdfsUri: getSubmissionTimeValue("hdfsUri", "hdfs://9.148.58.232:8020");
		expression<rstring> $hdfsUser : getSubmissionTimeValue("hdfsUser", "hdfs");
		expression<rstring> $hdfsRootPath: getSubmissionTimeValue("hdfsRootPath", "/user/hdfshome/parquet/partitioned");
	         
	         
	type
		RawNetworkEvent_t =              
            int32 source_port, 
            int32 tcpLength, 
            int64 mms,
            int32 dest_port, 
            int64 fileLength,
            float32 f1,
            float64 f2; 
	         
	graph
		

		/**
		 * Read and Parse raw events
		 */		
		stream<RawNetworkEvent_t> NetworkEvent = FileSource()
		{
			param
				file: "rawSampleData.txt";
				format: csv;
				separator: "|";
				ignoreExtraCSVValues: true;
		}


		() as NetworkEventParquetSink = ParquetSink(NetworkEvent)
		{
			param
				hdfsUri: $hdfsUri;
				hdfsUser: $hdfsUser;
     	    	rootPath: $hdfsRootPath;
     	        file:  "rawSampleDataUncompressed.txt";
     	        overwrite: true;
     	        compressionType: "uncompressed";
     	        tuplesPerFile: 4;
		}

}

