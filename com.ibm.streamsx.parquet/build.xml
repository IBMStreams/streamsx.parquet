<?xml version="1.0" encoding="UTF-8"?>
<!--
// *******************************************************************************
// * Copyright (C)2015, International Business Machines Corporation and *
// * others. All Rights Reserved. *
// *******************************************************************************
-->
<project name="com.ibm.streamsx.parquet" basedir="." default="all">

	<property environment="env" />
	<property name="streams.install" value="${env.STREAMS_INSTALL}" />
	<property name="maven.bin" value="${env.M2_HOME}/bin/mvn" />

	<property name="src.dir" value="impl/java/src" />
	<property name="build.dir" value="impl/java/bin" />
	<property name="impl.lib.dir" value="impl/lib" />
	<property name="lib.dir" value="lib" />
	<property name="test.src.dir" value="test/src" />
	<property name="test.build.dir" value="test/bin/parquetSink" />
	<property name="test.report.dir" value="test/report" />
	<property name="ext.downloads.dir" value="opt/downloaded" />
	<property name="gensrc.dir" value="${basedir}/impl/java/src-gen" />
	<property name="jarfile" value="com.ibm.streamsx.parquet.jar" />
	<property name="spl-mt" value="${streams.install}/bin/spl-make-toolkit" />
	
	<target name="init">
		<fail unless="env.M2_HOME" 
			message="Environment variable M2_HOME not set. Please set this to point to the path of maven home directory"/>
		<mkdir dir="${build.dir}" />
		<mkdir dir="${lib.dir}" />
		<mkdir dir="${impl.lib.dir}" />
		<mkdir dir="${ext.downloads.dir}" />
		<mkdir dir="${gensrc.dir}" />
		<mkdir dir="${test.build.dir}"/>		
		<mkdir dir="${test.report.dir}/xml"/>
		<mkdir dir="${test.report.dir}/html"/>
	</target>

	<target name="clean" depends="cpp-clean">
		<delete dir="${build.dir}" />
		<delete dir="${impl.lib.dir}" />
		<delete dir="${ext.downloads.dir}" />
		<delete dir="output"/>
		<delete dir="impl/java/bin"/>
		<delete dir="${gensrc.dir}"/>
		<delete dir="${test.build.dir}"/>
		<delete dir="${test.report.dir}/xml"/>
		<delete dir="${test.report.dir}/html"/>
	</target>


	<path id="cp.streams">
		<pathelement location="${streams.install}/lib/com.ibm.streams.operator.samples.jar" />
	</path>

	<path id="cp.ext.libs">
		<fileset dir="${lib.dir}"/>
	</path>


	<path id="cp.compile">
		<path refid="cp.streams" />
		<path refid="cp.ext.libs" />
	</path>
	
	<path id="cp.test">
		<path refid="cp.compile" />
		<fileset dir="${impl.lib.dir}"/>
	</path>
	
	
	<target name="all" depends="jar,cpp"/>
	
	<target name="cpp">
		<exec executable="${spl-mt}" failonerror="true">
			<arg value="-i"/>
			<arg value="."/>
	    </exec>
	</target>

	<target name="cpp-clean">
		<exec executable="${spl-mt}"  failonerror="true">
			<arg value="-c"/>
			<arg value="-i"/>
			<arg value="."/>
    </exec>
	</target>

	<!-- Downloads libraries using maven -->
	<target name="maven-deps">
		<exec executable="${maven.bin}"  failonerror="true">
			<arg value="dependency:copy-dependencies"/>
			<arg value="-DoutputDirectory=${ext.downloads.dir}"/>			
	    </exec>
		<zip destfile="${lib.dir}/dependencies.jar">
			    <zipgroupfileset dir="${ext.downloads.dir}" includes="*.jar" />		
		</zip>			
		<delete>
		    <fileset dir="${ext.downloads.dir}" includes="*.jar" excludes="dependencies.jar"/>
		 </delete>
		 <delete dir="${ext.downloads.dir}"/>
	</target>
	
	<target name="compile" depends="init, maven-deps">
		<javac srcdir="${src.dir}" destdir="${build.dir}" debug="true"
			includeantruntime="no"
			excludes="com/ibm/streamsx/parquet/**/*$StreamsModel.java"> 
			<classpath>
				<path refid="cp.compile" />
			</classpath>
			<compilerarg line="-s ${gensrc.dir}"/>
		</javac>
	</target>
	
	<target name="copy">
		<copy todir="${build.dir}">
		    <fileset dir="${src.dir}">
		       <exclude name="**/*.java"/>
		    </fileset>
		</copy>
	</target>

	<target name="jar" depends="compile, copy">
	<jar destfile="${impl.lib.dir}/${jarfile}" basedir="${build.dir}" includes="com/ibm/streamsx/parquet/**" filesonly="true" >
		</jar>
		<delete dir="${build.dir}" />		
	</target>

	
	<target name="test" depends="jar">
	    <javac srcdir="${test.src.dir}" 
	    	destdir="${test.build.dir}"
			debug="true"
			includeantruntime="no">
	    	<classpath>
				<path refid="cp.test" />
			</classpath>
	    </javac>
		<junit printsummary="yes" haltonfailure="yes">
		  <classpath>
		    <pathelement location="${test.build.dir}"/>
		  	<path refid="cp.test" />
		  </classpath>
		  <formatter type="plain"/>
		  <test name="com.ibm.streamsx.parquet.test.ParquetSinkTest" 
		  		haltonfailure="no" 
		  	    todir="${test.report.dir}/xml">
		    <formatter type="xml"/>
		  </test>
		</junit>
		 <junitreport>
		    <fileset dir="${test.report.dir}/xml">
			    <include name="TEST-*.xml"/>
			 </fileset>
			 <report format="frames" todir="${test.report.dir}/html"/>
		</junitreport>
	</target>

</project>

